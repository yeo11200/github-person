#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# 커밋 메시지 파일 경로
COMMIT_MSG_FILE="$1"

# 커밋 메시지 내용 읽기
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# 기본 커밋 메시지인 경우에만 Gemini로 생성
if [ "$COMMIT_MSG" = "WIP" ] || [ "$COMMIT_MSG" = "wip" ] || [ "$COMMIT_MSG" = "temp" ]; then
    echo "🤖 Gemini CLI로 커밋 메시지 자동 생성 중..."
    
    # 변경된 파일들 가져오기
    CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
    
    if [ -n "$CHANGED_FILES" ]; then
        # 변경 내용 요약 생성
        DIFF_SUMMARY=$(git diff --cached --stat)
        
        # Gemini CLI로 커밋 메시지 생성
        NEW_COMMIT_MSG=$(echo "다음 변경사항을 바탕으로 한국어 커밋 메시지를 생성해주세요. Conventional Commits 형식을 사용하고, 변경사항을 명확하게 설명해주세요:

변경된 파일들:
$CHANGED_FILES

변경 내용 요약:
$DIFF_SUMMARY

커밋 메시지 형식:
- feat: 새로운 기능 추가
- fix: 버그 수정
- docs: 문서 수정
- style: 코드 스타일 변경
- refactor: 코드 리팩토링
- test: 테스트 추가/수정
- chore: 빌드 프로세스 또는 보조 도구 변경

한 줄로 간결하게 작성해주세요." | gemini --temperature 0.3)
        
        if [ $? -eq 0 ] && [ -n "$NEW_COMMIT_MSG" ]; then
            echo "📋 생성된 커밋 메시지:"
            echo "$NEW_COMMIT_MSG"
            
            # 커밋 메시지 파일 업데이트
            echo "$NEW_COMMIT_MSG" > "$COMMIT_MSG_FILE"
            
            echo "✅ 커밋 메시지가 자동으로 생성되었습니다!"
        else
            echo "⚠️  커밋 메시지 생성 실패. 기본 메시지를 사용합니다."
        fi
    fi
fi 